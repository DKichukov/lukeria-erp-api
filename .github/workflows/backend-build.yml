name: backend-build

on:
    push: 
        branches: docker-deployment
        paths:
          - 'docker-files/backend/**'
          - 'docker-files/docker-compose.yml'
          - '.github/workflows/backend-build.yml'
    
jobs:
    compile:
        runs-on: ubuntu-latest
        name: Compile project
        steps:
            - name: Check out repository code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                
            - name: Set up Java
              uses: actions/setup-java@v4
              with:
                java-version: '17'
                distribution: 'liberica'
                
            - name: Cache Maven dependencies
              uses: actions/cache@v3
              with:
                path: ~/.m2/repository
                key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
                restore-keys: |
                  maven-${{ runner.os }}-
                
            - name: Build project
              run: |
                chmod +x ./mvnw
                ./mvnw clean compile
    
    unit-test:
        runs-on: ubuntu-latest
        name: Run unit tests
        steps:
            - name: Check out repository code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                
            - name: Set up Java
              uses: actions/setup-java@v4
              with:
                java-version: '17'
                distribution: 'liberica'
                
            - name: Cache Maven dependencies
              uses: actions/cache@v3
              with:
                path: ~/.m2/repository
                key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
                restore-keys: |
                  maven-${{ runner.os }}-
                
            - name: Running unit tests
              run: |
                chmod +x ./mvnw
                ./mvnw clean test

        
    build:
        runs-on: ubuntu-latest
        name: Build backend
        needs: [compile, unit-test]
        steps:
            - name: Check out repository code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                
            - name: Set up Java
              uses: actions/setup-java@v4
              with:
                java-version: '17'
                distribution: 'liberica'
                
            - name: Cache Maven dependencies
              uses: actions/cache@v3
              with:
                path: ~/.m2/repository
                key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
                restore-keys: |
                  maven-${{ runner.os }}-
                
            - name: Build project
              run: | 
                chmod +x ./mvnw
                ./mvnw clean package
    
    # build-image:
    #     name: Build Docker image
    #     runs-on: ubuntu-latest
    #     needs: [build]
    #     steps:
    #         - name: Check out repository code
    #           uses: actions/checkout@v4
    #           with:
    #             fetch-depth: 0
                
    #         - name: Extract project version
    #           id: extract_version
    #           run: echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
              
    #         - name: Login to Docker Hub
    #           uses: docker/login-action@v3
    #           with:
    #             username: ${{ secrets.DOCKERHUB_USERNAME }}
    #             password: ${{ secrets.DOCKERHUB_TOKEN }}
                
    #         - name: Build and push Docker image
    #           uses: docker/build-push-action@v5
    #           with:
    #             context: .
    #             file: docker-files/backend/Dockerfile
    #             push: true
    #             tags: ${{ secrets.DOCKERHUB_USERNAME }}/your-repo-name:${{ steps.extract_version.outputs.VERSION }}