name: backend-build

#Used on test purpose only!
on:
  push:
    branches: [docker-deployment]
    paths:
      - 'docker-files/backend/**'
      - 'docker-files/docker-compose.yml'
      - '.github/workflows/backend-build.yml'
      -
#final option to be used
#on:
#  pull_request:
#    types:
#      - closed
#    branches:
#      - main


jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile project
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'liberica'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Build project
        run: |
          chmod +x ./mvnw
          ./mvnw clean compile

  unit-test:
    runs-on: ubuntu-latest
    name: Run unit tests
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'liberica'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Running unit tests
        run: |
          chmod +x ./mvnw
          ./mvnw clean test

  build:
    runs-on: ubuntu-latest
    name: Build backend
    needs: [compile, unit-test]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'liberica'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Build project
        run: |
          chmod +x ./mvnw
          ./mvnw clean package

  sonar:
    name: Run SonarCloud analysis
    needs: build # Depends on the build job
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for SonarCloud to analyze pull requests

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'liberica'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed for pull request analysis
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # SonarCloud token
        run: |
          chmod +x ./mvnw
          ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=Ludogorie-Soft_lukeria-erp-api \

  build-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get short git SHA code
        id: sha
        run: echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker-files/backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/lukeria-frontend:${{ steps.sha.outputs.SHA }}
